pipeline {
    agent any
    environment {
        git_branch = 'main'
        git_url = 'https://github.com/ishwar0007/test.git'
        sonarqube_project_name = 'second'
    }
    stages {
        stage ('Clone') {
            agent {
                label 'Host-v1'
            }
            steps {
                sh 'ls -al'
                git branch: "${git_branch}",
                    credentialsId: 'GitHub-Token',
                    url: "${git_url}"
                    
                // Check the contents of the directory
                sh 'ls -la'
            }
        }
        stage('SonarQube Scan') {
            agent{
                label 'Host-v1'
            }
            environment {
                SCANNER_HOME = tool 'second-scanner'
            }
            steps {
                withSonarQubeEnv(installationName: 'sonar-second-server', credentialsId: 'sonar-second-token') {
                    sh ''' $SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=${sonarqube_project_name} \
                    -Dsonar.projectKey=${sonarqube_project_name} '''
                }
            }
        }
    }
    post {
        success {
            echo 'SonarQube analysis completed successfully.'
        }
        failure {
            echo 'SonarQube analysis failed.'
        }
    }
}